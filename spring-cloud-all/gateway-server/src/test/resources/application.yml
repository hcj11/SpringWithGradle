test:
  uri: lb://myservice1
  uri2: ${gateway-web}
spring:
  cloud:
    gateway:
      default-filters:
        - AddResponseHeader=X-Response-Default-Foo, Default-Bar
      routes: # don't use the lb  ,because  headers don't transmit  the key "host"
        - { order: -1, id: gateway_circuit_breaker ,uri: "${test.uri2}" , predicates: [{name: Host,args:{patterns:["**.circuitbreaker.org"]}},{name: Path, args: {patterns:[/circuitBreaker/open],matchOptionalTrailingSeparator: true}}],
            filters:
              [{
                name: CircuitBreaker,args:{name: slowcmd , fallbackUri: forward:/rewrite}
              }]
         }
        - { order: -1, id: gateway_circuit_breaker_no_fallback ,uri: "${test.uri2}" , predicates: [ { name: Host,args: { patterns: [ "**.circuitbreaker.org" ] } },{ name: Path, args: { patterns: [/circuitBreaker/open/nofallback],matchOptionalTrailingSeparator: true} } ],
            filters:
              [ {
                name: CircuitBreaker,args: { name: slowcmd }
              } ]
        }
        - {  order: -1,  id: gateway_circuit_breaker_timeOut ,uri: "${test.uri2}" , predicates: [{name: Host,args:{patterns:["**.circuitbreakertimeout.org"]}},{name: Path, args: {patterns:[/circuitBreaker/delay/2],matchOptionalTrailingSeparator: true}}],
            filters:
              [{
                name: CircuitBreaker,args:{name: circuitbreakertimeoutException, fallbackUri: forward:/circuitbreakertimeoutException }
              }]
        }
        - { id: gateway_route, uri: "${test.uri}", predicates: [ Path=/actuator/gateway/** ] , order: 300 }
        - { id: gateway_route_eureka, uri: lb://peer2, predicates: [ Path=/actuator/** ] , order: 400 }
        - { id: default_path_route,uri: lb://myservice1, predicates: [ Path=/** ] ,filters:["PrefixPath=/httpbin"], order: 500 }
    loadbalancer:
      ribbon:
        enabled: false
  main:
    web-application-type: reactive
  application:
    name: gateway
eureka:
  instance:
    virtual-host-name: gateway
    hostname: ${gateway}
  client:
    service-url: {defaultZone : 'http://${eureka}/eureka'}
listinfo:
  list:
    - { name: 'hcj',map: { key1: 'val1',key2: 'val2' },
        list: [ 'a','b' ],circuitBreakerList:[{name: 'slowcmd',fallbackUri: 'foward:/rewrite'}]
      }
    - { name: 'hcj2',map: { key3: 'val3',key4: 'val4' },list: [ 'c','d' ],circuitBreakerList:[{name: 'errorcmd',fallbackUri: 'foward:/errorPage'}]
      }
    - name: Path
      map:
        key: val
      list: [ 'f','g' ]
logging:
  config: classpath:config/logback-boot.xml